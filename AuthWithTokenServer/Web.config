<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>

  <system.web>
    <compilation debug="true" targetFramework="4.7.2" />
    <httpRuntime targetFramework="4.7.2" />
  </system.web>

  <!--A szolgáltatásmodellhez kapcsolódó osztályok biztosítása-->
  <system.serviceModel>
    
    <!--Szolgáltatások definiálása-->
    <services>
      <!--AuthenticationTokenService szolgáltatás definiálása-->
      <service name="AuthWithTokenServer.AuthenticationTokenService" behaviorConfiguration="ServiceBehaviorHttp">
        <endpoint address="" behaviorConfiguration="AjaxEnabledBehavior" binding="webHttpBinding" bindingConfiguration="webBindingSSL" contract="AuthWithTokenServer.AuthenticationTokenService" />
      </service>
      <!--TokenTestService szolgáltatás definiálása-->
      <service name="AuthWithTokenServer.TokenTestService" behaviorConfiguration="AuthServiceBehaviorHttp">
        <endpoint address="" behaviorConfiguration="AjaxEnabledBehavior" binding="webHttpBinding" bindingConfiguration="webBindingSSL" contract="AuthWithTokenServer.TokenTestService" />
      </service>
    </services>
    
    <!--Viselkedések definiálása-->
    <behaviors>
      
      <!--Végpont viselkedések definiálása-->
      <endpointBehaviors>
        <behavior name="AjaxEnabledBehavior">
          <webHttp helpEnabled="true" />
        </behavior>
      </endpointBehaviors>
      
      <!--Szolgáltatási viselkedések definiálása-->
      <serviceBehaviors>
        <behavior name="ServiceBehaviorHttp">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <!--Szolgáltatási viselkedés definiálása amely implementálja az IDispatchMessageInspector Interfész-t (Üzenetellenörző osztály -> Token Ellenőrzését hajtja végre)-->
        <behavior name="AuthServiceBehaviorHttp">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <TokenValidationBehaviorExtension />
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <!--Bővítmények definiálása-->
    <extensions>
      <behaviorExtensions>
        <!--Viselkedési bővítmény definiálása amely implementálja az IDispatchMessageInspector Interfész-t (ÜZenetellenőrző osztály -> Token Ellenőrzését hajtja végre)-->
        <add name="TokenValidationBehaviorExtension" type="AuthWithTokenServer.Classes.IDispatchMessageInspectorFunctions.TokenValidationBehaviorExtension, AuthWithTokenServer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
    </extensions>

    <!--A Szolgáltatás kommunikációinak definiálása (szolgáltatás végpontjai miként kommunikál más végpontokkal)-->
    <bindings>
      <!--Olyan kötelező elemeket definiálhatunk benne amelyet a WCF webszolgáltatások végpontjai konfiguráláshoz használnak-->
      <webHttpBinding>
        <!--SSL Security definiálása-->
        <binding name="webBindingSSL">
          <!--Hitelesítési adatok titkosítása HTTPS-SSL-en keresztül (Kivételt ad ha nincs SSL)-->
          <security mode="Transport">
            <!--Hitelesítési mód definiálása-->
            <transport clientCredentialType="None" />
          </security>
        </binding>
      </webHttpBinding>
    </bindings>

    <!--Információk az aktuális HOSTING környezetről, amelyben a szolgáltatások futnak-->
    <!--Webhelyenként több IIS összerendelés engedélyezése-->
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>

  <!--Webserver konfiguráció-->
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="false" />
    <directoryBrowse enabled="true" />
    <httpProtocol>
      <customHeaders>
        <remove name="X-Powered-By"/>
        <add name="Cache-Control" value=" no-cache, no-store, must-revalidate" />
        <add name="X-XSS-Protection" value="1; mode=block" />
        <add name="X-Content-Type-Options" value="nosniff" />
        <add name="Strict-Transport-Security" value="max-age=31536000; includeSubDomains; preload" />
        <add name="Keep-Alive" value="timeout=15, max=1000" />
      </customHeaders>
    </httpProtocol>
    <rewrite>
      <outboundRules>
        <rule name="Remove Server Response Header">
          <match serverVariable="RESPONSE_SERVER" pattern=":*" />
          <action type="Rewrite" value="MY_RESPONSE_SERVER_HEADER_NAME" />
        </rule>
        <rule name="Remove Access Control Allow Header">
          <match serverVariable="RESPONSE_Access_Control_Allow_Headers" pattern=":*" />
          <action type="Rewrite" value="MY_ACCESS_CONTROL_ALLOW_HEADER_NAME" />
        </rule>
        <rule name="Remove Access Control Allow Origin">
          <match serverVariable="RESPONSE_Access_Control_Allow_Origin" pattern=":*" />
          <action type="Rewrite" value="MY_REMOVE_ACCESS_CONTROL_ALLOW_ORIGIN_HEADER_NAME" />
        </rule>
      </outboundRules>
    </rewrite>
  </system.webServer>

  <connectionStrings>
    <add name="AuthenticationEntities" connectionString="metadata=res://*/Models.DBModel.AuthenticationExampleDB.csdl|res://*/Models.DBModel.AuthenticationExampleDB.ssdl|res://*/Models.DBModel.AuthenticationExampleDB.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=(localDB)\MSSQLLocalDB;initial catalog=AuthenticationExampleDB;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>